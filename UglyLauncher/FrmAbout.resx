<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAAd0SU1FB94BHxQzFCRkA2cAABB/SURBVHhe7Z1pjJRFHsYBEUREBUUOEZQbuQZG
        DrnmaFYkYIRxBGcGSRAQjCyIi9zXCMONyH3fl+DCwhIQYsInjRnZsCYuwirxg8Yo0WjUxNWspJantGZL
        8nRX9bzV3dU974dfQuqduv7PQ3dXvXVUE8fLvWbv3r2irKxMTJ06VTz//PNi1KhRoqCgQAwePFjk5uaK
        nj17im7duonOnTuLjh07ig4dOog2bdqIVq1aiYceekg88MAD4v777xeNGzcW9913n7j33nvF3XffLe68
        805xxx13iNtuu03UqlVL1KhRQ1SrVk2CfyMNz/A3+FvkQV6UgbJQJspGHagLdaJutAFtQZvQNrQRbX3q
        qadk29GHl19+WfYJfWN9TiY00RfGjx9fIUqmMnHixJSagCb6QpcuXWjQMomsrKzQANHARy0LWiaBrxLW
        92RBE33h9ttvp0HLJOrWrRsaIBp16tShQcskYHLW92RBE30hNEDioYkumTBhghg4cKDIzs6Ww6N27drJ
        oRO++xo2bCjuueeeqLCAZSJ6nxs1aiRj1KtXLzlsZDF1CU10xYgRI2iH4wHj6RdeeKFS9OjRg5ap0yK/
        l8h6ZUxKaNYvm7ZJBzFksXUFTXQFhjisU/Ewffp0cf369UqxcOFCWqZOzrpZ4pnr/0gJj5ZNpm3SSfQw
        kSa6Ah/1rFPxUNUNgBiy2LqCJrqiQYMGtFPxkNEGWDKFtkkHMWSxdQVNdAXm0Fmn4mHBggVUXBuWL19O
        y9RJpQFy1s2mbdJBDFlsXUETXeHCAGvWrKHi2rBt2zZapk4qDRDZU0bbpFPlDbB//34qrg3Hjx+nZeqk
        0gCDzm6ibdLx3gDFxcVyuNW6dWs5rq9fv34FrEPxUL16dfHxxx9TcW347LPPRM2aNWnZio7FQ8XAfUv+
        z/6lIv+NFeLJi2+IZ369QIVzRfEv5aJpT/MLLz2miDFijZgj9kyTeKCJtpSUlNAG62AYM2nSpKi89NJL
        8ofevHnzxOLFi8WKFSvEunXrxNGjR8Unn3xChY2Hy5cvix07doilS5fKevS68b6etVnReVzhDRNw8VxR
        /HO5eOzUepG/vVT0W/EXkT1nvMiePU5iM08ADZg2ttBEW2wmWrCQgwnjA/Pnz6dtrqB6NVF87TwVLhn0
        Kn2Rt0sDGjBtbKGJtuCjiDVKJ60NcIPI6fVUnGRgYwBowLSxhSbagu8j1iidtDfAwWVUnGRgYwBowLSx
        hSbaYvNDb/bs2TT4PmBjAPwwZOIkAxsDQAOmjS000RYbA6xcuZIG3wesPgF2L6biJIOMMMCuXbto8H3A
        ygA7Sqk4ycALAxQVFYnu3buLli1bynlpTEwoWIN0MI6/dOkSDb4P2Bggb8t8Ko5OyS/vi8J/HRd5p9aJ
        vCMrROTwchE5tFwMvPH7YeCBpXJuQc4x7C2Ts3+RPYutaPtkhLbpZnRNoBG0gmbQjmmqQxMVzz77LK1Q
        B+P8yZMnS6ZMmSJmzpwpli1bJsfePosPSktLaZ90cjfOpaKDov9eEFl/LhE1a9eieX0AGjJtFTRRgVUp
        rFAdCM+Cmw7AqKxPOrEMMPjcFprHJ6Ah01ZBExVYmsQK1UlnA+BFE+uTTiwD5G2aR/P4BDRk2ipoogLr
        01ihOvjYZ8FNBzZu3Ej7pBPLAP1XT6d5fAIaMm0VNFFhszBzxowZNLjpAH6nsD7pxDJAv1XTaB6fgIZM
        WwVNVNgYAC9ZWHDTgQMHDtA+6YQGuKnAm8GiCxbcdODtt9+mfdKpEgbADlWs28d253r16skt0YAVqINx
        /ocffkiDmw589dVX4tZbb6V9U2C9QGTXIkqHwkE0j28oPaEtNIbWaley3H/PMim6du0qX+goMLePd/aY
        4fvoo49oYNMJrDlADDBlPWfOnD/01WYY3KdPnz/kSSbYM8HaZIvUHgcVsIcKbLBggasKwBAsJjqLFi2i
        eZMBhuCsTbZI7XFaBXuoCA3A46JIZwNI7XFkCXuoCA3A46JIpQEwB8PaZIvUHhsQ2UNFaAAeF8WqVato
        3mSAORjWJluk9ji8iD1UhAbgcVHs3LmT5k0GmINhbbJFao8TrNhDRWgAHhfFyZMnad5kYLPxJRZSexxj
        xh4qTAb46aefxAcffCAnVd58801x+PBhsW/fPjlMRAM3bdokl3m/9tprcvgI8G+k4Rn+Bn+LPIcOHZLL
        wc+ePSsuXrwofvzxR1qnS77++mvx1ltvyfrRJrwhVOTn59OYKHCU3BdffEHLVXz77bfinXfekbHBzCP6
        unnzZrF27Vo59ASod8uWLfLZwYMHxbFjx8R7770nfvjhB1qmAnMwmIthbbNBam9aGx/LAN999508O4/l
        cwEmL7755htatwu+//5744RX3759xbRp0yrAIhIYGGJ++umntFzFl19+KU8AYeXagFk803+CK1euyPH8
        6tWrxdy5c//QVtP2fKm9aTIhlgHOnz9P87gEdbC6XfDuu+/SOnWww5jlteH06dO0zHi4cOECLdsGaMfK
        VEjtcWwLe6iIZYAjR47QPC5BHaxuF5w4cYLWqRPEANu3b6dlxkOQ3xgmA0jtcbQpe6iIZYCtW7fSPC5B
        HaxuF5imwUEQA6xfv56WGQ9B/gOYDCC1x/m27KEilgFef/11msclWLTB6naBzXqAIAbAHAErMx7w45SV
        bYPJAFJ7HHLMHipiGcBmSVVQ8GuZ1e0C/PJmdeoEMcCSJUtomfEAk7KybTAZQGqPk67ZQ0WqDZDImbYN
        GzbQOnWCGAB5WZnxEOQT0GQAqb3pICe8EsVbI8bQoUNpHpdgPM465wKbr7AgBsCrc1ZmPGDIycq2wWQA
        qT0WCLCHvoAzA1jnXGDzHR3EALNmzaJlxkMiDSC1x4md7KEvYPMG65wLbPYFpPorAF9TrGwbTAaQ2vt+
        JDtODmGdcwE+XVidOkEM4OJHIOYSWNk2mAwgtccVKOyhL+BjlHXOBTb/Q4MYwPdhoNQ+kXP5LghyUKQJ
        m82hQQyAlzyszHhI5ESQ1B6XIbGHvpDOBgj6uhZgupqVbYPJAFJ7m23eqSSdDXDq1ClaZjyUl5fTsm0w
        GUBqb7P+P5WkswE+//xz476DWEAbvLJmZdtgMoDUHnfjsYe+kM4GAFgwcubMGbF79265EASTTzjDGItJ
        8f4eoxz8GwtlMO2Nv9mzZ484d+6cuHbtGi3TFpMBpPZY1cIe+kK6GyCVmAwgtcctmeyhL4QGqDwmA/yu
        PX/oC6EBKo/JAL9DE70hNEDlsTJA+BXA61Vk/FdA+COQ16vI+B+Bvg8D+/XrJ0VIBKY9EQB/x4LrC7gT
        ARdjYNYRw0u9f6bT3KX2pomg5rk9xYA1MygPFw2heTIJnw2AuxBMF2LEQmpvmgrGBYfseBSA0y9ZnkzC
        ZwPYLGqNhdTe9DIoNIC/Bgi6OVRqb3odHBrAXwPgWF7WZluk9qYFIaEB/DVA0AMipPamJWGhAfw1QNAj
        YqT2pkWhoQEy1wBSe9Oy8KpuAMwVYMLIR2yOsYuF1N60MSSoAXr37k0bb4PpgAaAiSKW1wX9+/endfpE
        p+Kh8vZTRotIb5pHIbU3bQ0LagAcaMg+vmzA7iNWpk4iVw3bHBGTanALCdMGdJs5luZRSO1Nm0NDA/B6
        fSGIAaT2pu3hoQF4vb4ADZg2wGQAqb3pgIjQALxeX8BF10wbYDKA1N50RExoAF6vL+T9fS3VBpgMILU3
        HRIVGoDX6wsjrp6m2gCTAaT2pmPiQgPwen2gbcGfYl5vbzKA1N60KCI0AK9XgbkKzBZWBpxByMrUwYUV
        uLUE4JayyL4ykXt0hRj2zyOi6NcLVBeFyQBSe9NRsaEBeL2KIKeF4zBHVqYObiZhsbfBZACpfUFBAX2o
        CA3A61WkswGk9qbj4kMD8HoV6WwAqb3pwojQALxeRTobQGoPgdhDRWgAXq8inQ0gtTcFOTQAr1eRzgaQ
        8cVWZPZQ0Tynh7wgkdFhZOwRBAgNEB0XBij+5X3x+PntInJoucjfukD0X/VKhT5Y0s/KVEjtcXngmDFj
        5Lxww4YNRZ06dSpgmeIlNEB0ghqg+D/lokm3h2k+HV1TaAytoXnFzaHRsLk61kRogOgENcCgM+bbzxN+
        d7CJ0ADRCWqAyB7zOYehAQLguwGwPY/l0QkNEADfDdBzgXn/f6NGjUIDVBbfDdBj3kSaR6dt27ahASpL
        JhgAS8eZtgqaqHBhAOxRxyEPlWHAgAG0TB3fDXD16lV5xRyOh8MrYL1/prUYoH3BY6LvsqmUFnnmfQEl
        JSWVNwDGjKxQnVaD+4v8bQsonUc/SfO4xGcDQPxbbrmF5lN0GvUEjR1oM9R8gAXQx/nY89+0aVM51h8+
        fHhM8QFNVKAgVqFOj7kT6McTyN9tHqYExWcD4BZQlkcnsqOUxg70Kn2R5tGpX7++UeRY0ESFadcQCA0Q
        3QA2V9J4bYB27drRSnVCA0Q3AL7zWR6dyM5XaexAyg1gWjIOQgNENwB+6LE8OpFDy2jsQMoNkJ2dTSvV
        CQ0QzAA5x1bT2IGUGyASidBKdUIDBDNA4eUTNHYg5QYwLRcDWC/waNlkStvhA2kel6TaANiejgkdhmmc
        /9u6/uhLu1NuAFBYWCi3EOEwgXr16sn78BWsQTfT5ok8+Uu3MmCMzMrUSbUBTKAPFX268YMP3/n42C+8
        cjKm+MDGAA0aNEisAWIB97FG6aATrHM2YDKElanjuwHQB9Y3G2wMgHN+mDa20ERbQgOYSbQBmjdvHhqA
        iecCJwbYvpD2zQYbA7Ru3Tp1BrC5c7CqGyByMPo434SNATDnz7SxhSbaAvexRulUdQPk/HUV7ZsNNgbA
        Fm+mjS000RbTceSgqhug4NJx2jcbbAyQl5eXOgMUFRXRRum0yO0pO1IZbF6H+mwAjPNNW7ixtHvQuc0i
        sm+JPNqt96uTKvqP2LFydcaNG5c6A4Cnn35aZGVliRYtWoi77rpLvo9WsAa7JtUG6FRyY5y/a9Fv7F4s
        8g8vFzl/uzHO/7d5nF/yc7lonBX7kC6gxxQxRqwRc8SeaRIPNNEVybiWNtUGyNs8n4prA/7nszJ1EEMW
        W1fQRFeEBohNZL95b2VoAAPpbIDcDeby09oAmKdmnXJJOhugzxLzef9B5/pN0ERXPPjgg7RTLklnA+CN
        KStTBzFksXUFTXQFfqmyTrkk0w2AGLLYuoImugLDFNYpl2AyChcnJAKbdfutHu8vN2hUBtP+feBiqBcL
        muiS5557TuTk5IguXbqI9u3bi5YtW4pmzZrJfeq4tQo/cqLBApKJ6H3Gdz5WY3fv3l2MHDkyoeIDmugL
        2OjAApZJYGEN63uyoIm+EBog8dBEX7BddpbO1K1bNzRANExX2mUC2H7H+p4saKIvJGMYmWoSPcwzQRN9
        YdKkSTRomQSW3rO+Jwua6BN79+6VlyRjnf3EiRPF6NGj5dh4yJAhcjEEDkDAqpiuXbvKoSaWSGFPIy5E
        wpATiyZxQSI+avGVgmVsWMuI16r4/sUPzdq1a4saNWpUiIJ/16pVS96vj98heA2LISvOS8DwtUmTJrJM
        DGdRPurB6iicxoGhbqdOnWRbHnnkEXn13KBBg8SwYcNEcXGxGDt2rJxjKC0tlbd/sz4nj/Jq/wPu+SvD
        dqSa/wAAAABJRU5ErkJggg==
</value>
  </data>
</root>